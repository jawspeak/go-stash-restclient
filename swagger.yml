swagger: '2.0'
info:
  # Version of Stash's Core Rest API coded against
  version: '1.0'
  description: "Coded against
      https://developer.atlassian.com/static/rest/stash/3.11.2/stash-rest.html#idp96366
      Partially complete, more definitions needed."
  title: Stash Core Rest API

# host: <omitted>
  # this is omitted because you use config.json (see config.sample.json)

basePath: /rest/api/1.0/
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/projects/{project}/repos/{repo}/commits':
    get:
      description: Returns commits for a project and repo
      operationId: getCommits
      parameters:
        - type: string
          name: project
          in: path
          required: true
        - type: string
          name: repo
          in: path
          required: true
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommitsResponse'

  '/projects/{project}/repos/{repo}/pull-requests':
    get:
      description: Get recent pull requests.
      operationId: getPullRequests
      parameters:
        - type: string
          name: project
          in: path
          required: true
        - type: string
          name: repo
          in: path
          required: true

        # Query params
        - name: limit
          type: integer
          in: query
          description: Probably defaults to 25. It is a best practice to check the limit attribute on the response to see what limit has been applied.
        - name: start
          type: integer
          in: query
          description: The count of the result to start with, inclusive (I think).
        - name: state
          type: string
          in: query
          enum: ["OPEN", "DECLINED", "MERGED", "ALL"]
          default: ALL
        - name: username.1
          type: string
          in: query
        - name: role.1
          type: string
          in: query
          enum: ["AUTHOR", "REVIEWER", "PARTICIPANT"]
        - name: username.2
          type: string
          in: query
        - name: role.2
          type: string
          in: query
          enum: ["AUTHOR", "REVIEWER", "PARTICIPANT"]
        # Not listing out the others, but supports N from 1 to 10 for each of the above.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PullRequestsResponse'

  '/projects/{project}/repos/{repo}/pull-requests/{pullRequestId}/activities':
    get:
      description: Get activities for a pull request (comments, etc)
      operationId: getPullRequestActivities
      parameters:
        - type: string
          name: project
          in: path
          required: true
        - type: string
          name: repo
          in: path
          required: true
        - name: pullRequestId
          in: path
          type: integer
          format: int64
          required: true

          # Query params
        - name: limit
          type: integer
          in: query
          description: Probably defaults to 25. It is a best practice to check the limit attribute on the response to see what limit has been applied.
        - name: fromId
          type: integer
          format: int64
          in: query
          description: id of the activity item to use as the first item in the returned page
        - name: fromType
          type: string
          in: query
          enum: ["COMMENT", "ACTIVITY"]
          description: (required if fromId is present) the type of the activity item specified by fromId (either COMMENT or ACTIVITY)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PullRequestActivitiesResponse'



definitions:
  CommitsResponse:
    type: object
    properties:
# TODO incomplete for now. Will do when I need it.
#      values:
#        type: array
#        items: TODO
      size:
        type: integer
      isLastPage:
        type: boolean
      start:
        type: integer
      limit:
        type: integer
      nextPageStart:
        type: integer
  PullRequestsResponse:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: "#/definitions/PullRequest"
      size:
        type: integer
      isLastPage:
        type: boolean
      start:
        type: integer
      limit:
        type: integer
      nextPageStart:
        type: integer
  PullRequest:
    type: object
    properties:
      id:
        type: integer
        format: int64
      version:
        type: integer
      title:
        type: string
      description:
        type: string
      state:
        type: string
      createdDate:
        type: integer
        format: int64
      updatedDate:
        type: integer
        format: int64
      author:
        $ref: "#/definitions/Author"
  PullRequestActivitiesResponse:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: "#/definitions/PullRequestActivity"
      size:
        type: integer
      isLastPage:
        type: boolean
      start:
        type: integer
      limit:
        type: integer
      nextPageStart:
        type: integer
  PullRequestActivity:
    type: object
    properties:
      id:
        type: integer
        format: int64
      createdDate:
        type: integer
        format: int64
      user:
        $ref: '#/definitions/User'
      action:
        type: string
        enum: ["COMMENTED", "OPENED", "MERGED", "APPROVED"]
      comment:
        $ref: '#/definitions/Comment'

  # Basic things
  Author:
    type: object
    properties:
      user:
        $ref: "#/definitions/User"
      role:
        type: string
        enum: ["AUTHOR"]
  User:
    type: object
    properties:
      name:
        type: string
      emailAddress:
        type: string
      id:
        type: integer
      displayName:
        type: string
      slug:
        type: string
      link:
        $ref: '#/definitions/Link'
  Link:
    type: object
    properties:
      url:
        type: string
      rel:
        type: string
  Comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      version:
        type: integer
      text:
        type: string
      author:
        $ref: '#/definitions/User'
      createdDate:
        type: integer
        format: int64
      updatedDate:
        type: integer
        format: int64
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
